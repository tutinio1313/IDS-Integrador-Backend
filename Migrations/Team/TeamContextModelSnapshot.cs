// <auto-generated />
using System;
using IDS_Integrador.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDS_Integrador.Migrations.Team
{
    [DbContext(typeof(TeamContext))]
    partial class TeamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Category", b =>
                {
                    b.Property<string>("IdCategory")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCategory");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Match", b =>
                {
                    b.Property<string>("IDMatch")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocalTeamGoals")
                        .HasColumnType("int");

                    b.Property<string>("LocalTeamIDTeam")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("VisitTeamGoals")
                        .HasColumnType("int");

                    b.Property<string>("VisitTeamIDTeam")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("IDMatch");

                    b.HasIndex("LocalTeamIDTeam");

                    b.HasIndex("VisitTeamIDTeam");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Player", b =>
                {
                    b.Property<string>("IDPlayer")
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("CategoryIdCategory")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TeamIDTeam")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("IDPlayer");

                    b.HasIndex("CategoryIdCategory");

                    b.HasIndex("TeamIDTeam");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Team", b =>
                {
                    b.Property<string>("IDTeam")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IDTeam");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Match", b =>
                {
                    b.HasOne("IDS_Integrador.Model.Entity.Team.Team", "LocalTeam")
                        .WithMany()
                        .HasForeignKey("LocalTeamIDTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IDS_Integrador.Model.Entity.Team.Team", "VisitTeam")
                        .WithMany()
                        .HasForeignKey("VisitTeamIDTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LocalTeam");

                    b.Navigation("VisitTeam");
                });

            modelBuilder.Entity("IDS_Integrador.Model.Entity.Team.Player", b =>
                {
                    b.HasOne("IDS_Integrador.Model.Entity.Team.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryIdCategory");

                    b.HasOne("IDS_Integrador.Model.Entity.Team.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamIDTeam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
